name: Deploy Angular App to AWS

on:
  workflow_dispatch:   # manual trigger only

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      STACK_NAME: angular-demo-stack
      BUCKET_NAME: angular-demo-bucket   # must be globally unique and stable
      CNAME_ALIASES: ""                  # e.g. "demo.example.com,www.demo.example.com"
      ACM_CERT_ARN: ""                   # required if using custom domains
      AWS_REGION: us-east-1              # CloudFront always needs cert in us-east-1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build -- --configuration production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --stack-name $STACK_NAME \
            --template-file aws-cft.yaml \
            --parameter-overrides \
              BucketName=$BUCKET_NAME \
              CNAMEAliases=$CNAME_ALIASES \
              ACMCertificateArn=$ACM_CERT_ARN \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: Upload Angular build to S3
        run: |
          aws s3 sync dist/angular-demo/ s3://$BUCKET_NAME/ --delete

      - name: Invalidate CloudFront cache
        run: |
          DIST_ID=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionID'].OutputValue" \
            --output text)
          aws cloudfront create-invalidation \
            --distribution-id $DIST_ID \
            --paths "/*"
          echo "Invalidation created for distribution $DIST_ID"

      - name: Print deployment URLs
        run: |
          CLOUDFRONT_URL=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDomainName'].OutputValue" \
            --output text)
          echo "-----------------------------------------------------"
          echo "Deployment completed!"
          echo "CloudFront URL: https://$CLOUDFRONT_URL"
          if [ -n "${CNAME_ALIASES}" ]; then
            echo "Custom Domains: $CNAME_ALIASES"
          fi
          echo "-----------------------------------------------------"
