name: Deploy Angular App to AWS

on:
  workflow_dispatch:   # Manual trigger (adhoc from GitHub Actions)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: |
          #sed -i 's|API_URL_PLACEHOLDER|https://ws.screeningplusdemo.com|g' src/environments/environment.prod.ts
          npm run build --prod
          #git checkout src/environments/environment.prod.ts  # restore original file

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}   # ACM cert is in us-east-1 (mandatory for CloudFront)

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --stack-name screening-plus-angular \
            --template-file aws-cft.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              BucketName=screening-plus-angular-demo \
              CNAMEAliases="screeningplusdemo.com,www.screeningplusdemo.com" \
              ACMCertificateArn=arn:aws:acm:us-east-1:940146811379:certificate/a9111815-780d-4522-85f1-c1ecdd52238f

      - name: Upload dist to S3
        run: aws s3 sync dist/screening-plus s3://screening-plus-angular-demo/ --delete --acl public-read

      - name: Get CloudFront Distribution ID
        id: cloudfront
        run: |
          DIST_ID=$(aws cloudformation describe-stacks \
            --stack-name screening-plus-angular \
            --query "Stacks[0].Outputs[?ExportName=='CloudFrontDistributionID'].OutputValue" \
            --output text)
          echo "dist_id=$DIST_ID" >> $GITHUB_ENV

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ env.dist_id }} --paths "/*"

      - name: Show Deployment URLs
        run: |
          CLOUDFRONT_URL=$(aws cloudformation describe-stacks \
            --stack-name screening-plus-angular \
            --query "Stacks[0].Outputs[?ExportName=='CloudFrontURL'].OutputValue" \
            --output text)
          echo " Deployment completed successfully!"
          echo " URLs:"
          echo " - https://$CLOUDFRONT_URL"
          echo " - https://screeningplusdemo.com"
          echo " - https://www.screeningplusdemo.com"

